version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - bulletin_board
    networks:
        - my_network
  bulletin_board:
    build:
      context: ./backend/bulletin_board
      dockerfile: Dockerfile
    container_name: bulletin_board_beego
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./backend/bulletin_board:/app
    ports:
      - "8000:8000"
    networks:
        - my_network

  user:
    build:
      context: ./backend/user
      dockerfile: Dockerfile
    container_name: user_beego
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./backend/user:/app
    ports:
      - "8001:8001"
    networks:
        - my_network


  frontend:
    ports:
      - "8081:80" # Nginx는 기본적으로 80 포트를 사용합니다.
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - my_network

  db:
    image: postgres:16.0-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - my_network

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
volumes:
  pgdata:
  redisdata:
